<?xml version="1.0" encoding="UTF-8"?> 
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:beans="http://www.springframework.org/schema/beans" 
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.1.xsd 
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.1.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-4.1.xsd" 
	default-autowire="byName" default-lazy-init="false">

    <context:component-scan base-package="com.yodo" >
    	<!-- 防止加载applicationContext.xml时因容器已经存在Service类，使得cglib将不对Service进行代理 -->
    	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
    </context:component-scan>
    
	<mvc:annotation-driven conversion-service="conversionService"/>
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/images/**"/>
			<mvc:exclude-mapping path="/js/**"/>
			<mvc:exclude-mapping path="/css/**"/>
			<mvc:exclude-mapping path="/fonts/**"/>
			<mvc:exclude-mapping path="*.html"/>
			<mvc:exclude-mapping path="/login/*"/>
			<beans:bean class="com.chuck.shop.framework.interceptor.AuthorityInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/images/**"/>
			<mvc:exclude-mapping path="/js/**"/>
			<mvc:exclude-mapping path="/css/**"/>
			<mvc:exclude-mapping path="/fonts/**"/>
			<mvc:exclude-mapping path="*.html"/>
			<beans:bean class="com.chuck.shop.framework.interceptor.SqlInjectIntercepter" />
		</mvc:interceptor>
	</mvc:interceptors>
	
	<mvc:resources mapping="/images/**" location="/images/" cache-period="2592000"/>
	<mvc:resources mapping="/js/**" location="/js/" cache-period="2592000"/>
    <mvc:resources mapping="/css/**" location="/css/" cache-period="2592000"/>
    <mvc:resources mapping="/fonts/**" location="/fonts/" cache-period="2592000"/>

	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
	    <property name="converters">
	       <list>		        
		        <bean class="com.chuck.shop.common.utils.StringToDateConverter">
		        </bean>
	        </list>
	    </property>
	</bean>
	
	<!-- 使用ConfigurableWebBindingInitializer注册conversionService -->
	<bean id="myWebBindingInitializer" class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
		<property name="conversionService" ref="conversionService"/>
	</bean>
	
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> 
		<property name="webBindingInitializer" ref="myWebBindingInitializer">
		</property>
		<property name="messageConverters">    
			<list >
				<ref bean="mappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>
    
    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	    <property name="supportedMediaTypes">
	        <list>  
	            <bean class="org.springframework.http.MediaType">
					<constructor-arg index="0" value="text"/>
			      	<constructor-arg index="1" value="plain"/>
			      	<constructor-arg index="2" value="UTF-8"/>
			   	</bean>
			      	<bean class="org.springframework.http.MediaType">
			      	<constructor-arg index="0" value="*"/>
			      	<constructor-arg index="1" value="*"/>
			      	<constructor-arg index="2" value="UTF-8"/>
			    </bean>
			      	<bean class="org.springframework.http.MediaType">
			     	<constructor-arg index="0" value="text"/>
			      	<constructor-arg index="1" value="*"/>
			      	<constructor-arg index="2" value="UTF-8"/>
			    </bean>
			      	<bean class="org.springframework.http.MediaType">
			      	<constructor-arg index="0" value="application"/>
			      	<constructor-arg index="1" value="json"/>
			      	<constructor-arg index="2" value="UTF-8"/>
			    </bean>
	       </list>  
	    </property>
	</bean>
	
    <bean id="multipartResolver"  
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8" />
        <property name="resolveLazily" value="true"/>
        <property name="maxUploadSize"> 
            <value>104857600</value> 
        </property> 
        <property name="maxInMemorySize"> 
            <value>1024000</value> 
        </property> 
    </bean>
    
    <bean id="velocityConfigurer" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath">
			<value>view/</value>  
    	</property>
    	<property name="velocityProperties">        
            <props>        
                 <prop key="input.encoding">utf-8</prop>        
                 <prop key="output.encoding">utf-8</prop>            
            </props>        
        </property>
        <property name="configLocation" value="/velocity/velocity.properties" />
    </bean>
    <bean id="viewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
    	<property name="suffix"><value>.vm</value></property>
    	<property name="contentType" value="text/html;charset=UTF-8"></property>
    	<property name="exposeSpringMacroHelpers" value="true"></property>
    	<property name="exposeSessionAttributes" value="true"></property>
    	<property name="exposeRequestAttributes" value="true"></property>
    	<property name="toolboxConfigLocation" value="/velocity/velocity-toolbox.xml" />
	</bean>    

</beans>
